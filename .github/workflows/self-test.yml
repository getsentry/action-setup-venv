name: Self Test

on:
  pull_request:
  push:
    branches: [main, test-me-*]

jobs:
  self-test:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - run: echo "3.11.6" > .python-version
      shell: bash

    # Run local action
    - name: Test action-setup-venv
      id: venv
      uses: ./
      with:
        # this should override .python-version
        python-version: 3.11.4
        install-cmd: pip install -r test/testdata/requirements.txt

    # Print debug vars
    - name: Print variables for debugging
      shell: bash
      run: |
        echo "VIRTUAL_ENV: ${VIRTUAL_ENV}"
        echo "PATH: ${PATH}"
        echo "Cache Hit: ${{ steps.venv.outputs.cache-hit }}"
        ls -la ${VIRTUAL_ENV}/${{ runner.os == 'Windows' && 'Lib' || 'lib/*' }}/site-packages

    # Test the venv and install worked
    - name: Ensure environment works
      run: |
        python -Sc 'import sys; assert sys.version_info[:3] == (3, 11, 4), sys.version_info'
        python ./test/testdata/demo.py

  self-test-python-version-file:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3

    - run: echo "3.11.6" > .python-version
      shell: bash

    # Run local action
    - name: Test action-setup-venv
      id: venv
      uses: ./
      with:
        # since there is a .python-version file and we did not specify
        # python-version, it should be used
        install-cmd: pip install -r test/testdata/requirements.txt

    # Print debug vars
    - name: Print variables for debugging
      shell: bash
      run: |
        echo "VIRTUAL_ENV: ${VIRTUAL_ENV}"
        echo "PATH: ${PATH}"
        echo "Cache Hit: ${{ steps.venv.outputs.cache-hit }}"
        ls -la ${VIRTUAL_ENV}/${{ runner.os == 'Windows' && 'Lib' || 'lib/*' }}/site-packages

    # Test the venv and install worked
    - name: Ensure environment works
      run: |
        python -Sc 'import sys; assert sys.version_info[:3] == (3, 11, 6), sys.version_info'
        python ./test/testdata/demo.py

#   no-install-self-test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#
#     # Run local action
#     - name: Test action-setup-venv
#       id: venv
#       uses: ./
#       with:
#         python-version: 3.11.6
#
#     # Test the venv and external install work
#     - name: Pip install
#       if: steps.venv.outputs.cache-hit != 'true'
#       run: pip install -r test/testdata/requirements.txt
#     - name: Ensure environment works
#       run: python ./test/testdata/demo.py
